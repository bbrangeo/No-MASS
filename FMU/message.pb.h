// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: message.proto
// Protobuf C++ Version: 5.29.2

#ifndef message_2eproto_2epb_2eh
#define message_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029002
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_message_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_message_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_message_2eproto;
class SensorData;
struct SensorDataDefaultTypeInternal;
extern SensorDataDefaultTypeInternal _SensorData_default_instance_;
class SensorDataList;
struct SensorDataListDefaultTypeInternal;
extern SensorDataListDefaultTypeInternal _SensorDataList_default_instance_;
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google


// ===================================================================


// -------------------------------------------------------------------

class SensorData final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:SensorData) */ {
 public:
  inline SensorData() : SensorData(nullptr) {}
  ~SensorData() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SensorData* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SensorData));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SensorData(
      ::google::protobuf::internal::ConstantInitialized);

  inline SensorData(const SensorData& from) : SensorData(nullptr, from) {}
  inline SensorData(SensorData&& from) noexcept
      : SensorData(nullptr, std::move(from)) {}
  inline SensorData& operator=(const SensorData& from) {
    CopyFrom(from);
    return *this;
  }
  inline SensorData& operator=(SensorData&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SensorData& default_instance() {
    return *internal_default_instance();
  }
  static inline const SensorData* internal_default_instance() {
    return reinterpret_cast<const SensorData*>(
        &_SensorData_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(SensorData& a, SensorData& b) { a.Swap(&b); }
  inline void Swap(SensorData* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SensorData* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SensorData* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SensorData>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SensorData& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SensorData& from) { SensorData::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SensorData* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "SensorData"; }

 protected:
  explicit SensorData(::google::protobuf::Arena* arena);
  SensorData(::google::protobuf::Arena* arena, const SensorData& from);
  SensorData(::google::protobuf::Arena* arena, SensorData&& from) noexcept
      : SensorData(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kParameterFieldNumber = 1,
    kUnitFieldNumber = 3,
    kValueFieldNumber = 2,
  };
  // string parameter = 1;
  void clear_parameter() ;
  const std::string& parameter() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_parameter(Arg_&& arg, Args_... args);
  std::string* mutable_parameter();
  PROTOBUF_NODISCARD std::string* release_parameter();
  void set_allocated_parameter(std::string* value);

  private:
  const std::string& _internal_parameter() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_parameter(
      const std::string& value);
  std::string* _internal_mutable_parameter();

  public:
  // string unit = 3;
  void clear_unit() ;
  const std::string& unit() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_unit(Arg_&& arg, Args_... args);
  std::string* mutable_unit();
  PROTOBUF_NODISCARD std::string* release_unit();
  void set_allocated_unit(std::string* value);

  private:
  const std::string& _internal_unit() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_unit(
      const std::string& value);
  std::string* _internal_mutable_unit();

  public:
  // double value = 2;
  void clear_value() ;
  double value() const;
  void set_value(double value);

  private:
  double _internal_value() const;
  void _internal_set_value(double value);

  public:
  // @@protoc_insertion_point(class_scope:SensorData)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      32, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SensorData& from_msg);
    ::google::protobuf::internal::ArenaStringPtr parameter_;
    ::google::protobuf::internal::ArenaStringPtr unit_;
    double value_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_message_2eproto;
};
// -------------------------------------------------------------------

class SensorDataList final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:SensorDataList) */ {
 public:
  inline SensorDataList() : SensorDataList(nullptr) {}
  ~SensorDataList() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SensorDataList* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SensorDataList));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SensorDataList(
      ::google::protobuf::internal::ConstantInitialized);

  inline SensorDataList(const SensorDataList& from) : SensorDataList(nullptr, from) {}
  inline SensorDataList(SensorDataList&& from) noexcept
      : SensorDataList(nullptr, std::move(from)) {}
  inline SensorDataList& operator=(const SensorDataList& from) {
    CopyFrom(from);
    return *this;
  }
  inline SensorDataList& operator=(SensorDataList&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SensorDataList& default_instance() {
    return *internal_default_instance();
  }
  static inline const SensorDataList* internal_default_instance() {
    return reinterpret_cast<const SensorDataList*>(
        &_SensorDataList_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(SensorDataList& a, SensorDataList& b) { a.Swap(&b); }
  inline void Swap(SensorDataList* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SensorDataList* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SensorDataList* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SensorDataList>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SensorDataList& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SensorDataList& from) { SensorDataList::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SensorDataList* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "SensorDataList"; }

 protected:
  explicit SensorDataList(::google::protobuf::Arena* arena);
  SensorDataList(::google::protobuf::Arena* arena, const SensorDataList& from);
  SensorDataList(::google::protobuf::Arena* arena, SensorDataList&& from) noexcept
      : SensorDataList(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDataFieldNumber = 1,
  };
  // repeated .SensorData data = 1;
  int data_size() const;
  private:
  int _internal_data_size() const;

  public:
  void clear_data() ;
  ::SensorData* mutable_data(int index);
  ::google::protobuf::RepeatedPtrField<::SensorData>* mutable_data();

  private:
  const ::google::protobuf::RepeatedPtrField<::SensorData>& _internal_data() const;
  ::google::protobuf::RepeatedPtrField<::SensorData>* _internal_mutable_data();
  public:
  const ::SensorData& data(int index) const;
  ::SensorData* add_data();
  const ::google::protobuf::RepeatedPtrField<::SensorData>& data() const;
  // @@protoc_insertion_point(class_scope:SensorDataList)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SensorDataList& from_msg);
    ::google::protobuf::RepeatedPtrField< ::SensorData > data_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_message_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// SensorData

// string parameter = 1;
inline void SensorData::clear_parameter() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.parameter_.ClearToEmpty();
}
inline const std::string& SensorData::parameter() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:SensorData.parameter)
  return _internal_parameter();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SensorData::set_parameter(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.parameter_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:SensorData.parameter)
}
inline std::string* SensorData::mutable_parameter() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_parameter();
  // @@protoc_insertion_point(field_mutable:SensorData.parameter)
  return _s;
}
inline const std::string& SensorData::_internal_parameter() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.parameter_.Get();
}
inline void SensorData::_internal_set_parameter(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.parameter_.Set(value, GetArena());
}
inline std::string* SensorData::_internal_mutable_parameter() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.parameter_.Mutable( GetArena());
}
inline std::string* SensorData::release_parameter() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:SensorData.parameter)
  return _impl_.parameter_.Release();
}
inline void SensorData::set_allocated_parameter(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.parameter_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.parameter_.IsDefault()) {
    _impl_.parameter_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:SensorData.parameter)
}

// double value = 2;
inline void SensorData::clear_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_ = 0;
}
inline double SensorData::value() const {
  // @@protoc_insertion_point(field_get:SensorData.value)
  return _internal_value();
}
inline void SensorData::set_value(double value) {
  _internal_set_value(value);
  // @@protoc_insertion_point(field_set:SensorData.value)
}
inline double SensorData::_internal_value() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.value_;
}
inline void SensorData::_internal_set_value(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_ = value;
}

// string unit = 3;
inline void SensorData::clear_unit() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.unit_.ClearToEmpty();
}
inline const std::string& SensorData::unit() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:SensorData.unit)
  return _internal_unit();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SensorData::set_unit(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.unit_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:SensorData.unit)
}
inline std::string* SensorData::mutable_unit() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_unit();
  // @@protoc_insertion_point(field_mutable:SensorData.unit)
  return _s;
}
inline const std::string& SensorData::_internal_unit() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.unit_.Get();
}
inline void SensorData::_internal_set_unit(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.unit_.Set(value, GetArena());
}
inline std::string* SensorData::_internal_mutable_unit() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.unit_.Mutable( GetArena());
}
inline std::string* SensorData::release_unit() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:SensorData.unit)
  return _impl_.unit_.Release();
}
inline void SensorData::set_allocated_unit(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.unit_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.unit_.IsDefault()) {
    _impl_.unit_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:SensorData.unit)
}

// -------------------------------------------------------------------

// SensorDataList

// repeated .SensorData data = 1;
inline int SensorDataList::_internal_data_size() const {
  return _internal_data().size();
}
inline int SensorDataList::data_size() const {
  return _internal_data_size();
}
inline void SensorDataList::clear_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.Clear();
}
inline ::SensorData* SensorDataList::mutable_data(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:SensorDataList.data)
  return _internal_mutable_data()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::SensorData>* SensorDataList::mutable_data()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:SensorDataList.data)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_data();
}
inline const ::SensorData& SensorDataList::data(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:SensorDataList.data)
  return _internal_data().Get(index);
}
inline ::SensorData* SensorDataList::add_data() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::SensorData* _add = _internal_mutable_data()->Add();
  // @@protoc_insertion_point(field_add:SensorDataList.data)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::SensorData>& SensorDataList::data() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:SensorDataList.data)
  return _internal_data();
}
inline const ::google::protobuf::RepeatedPtrField<::SensorData>&
SensorDataList::_internal_data() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.data_;
}
inline ::google::protobuf::RepeatedPtrField<::SensorData>*
SensorDataList::_internal_mutable_data() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.data_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // message_2eproto_2epb_2eh
